1. When smoothing the CPU temperature, do you think you got a better result with LOESS or Kalman smoothing? What differences did you notice? 

For LOESS smoothing, in hindsight the graph appears more smooth than Kalman and it doesn't put as much weight on the outliers. However, I believe we got better results with the Kalman smooth. Kalman has more parameters to control and we can put more emphasis on the outliers.CPU temperature can quickly fluctuate due to the amount of load it recieves, it is typical for a CPU temperatures to spike due to different CPU percentage and system loads. We can put our knowledge of how CPU temperature correlates with system loads and cpu percentage to set a transition matrix for the Kalman filter. This transition matrix will allow a more accurate graph in Kalman smoothing than the LOESS in this case. I believe the LOESS is smoothing the graph too much and not putting enough emphasis on the sudden temperature spikes.

2. In the GPX files, you might have also noticed other data about the observations: time stamp, course (heading in degrees from north, 0–360), speed (in m/s). How could those have been used to make a better prediction about the “next” latitude and longitude? [Aside: I tried, and it didn't help much. I think the values are calculated from the latitude/longitude by the app: they don't really add much new information.] 

We could have used the speed and course to create a transition matrix to predict the next latitude/longitude coordinates. Using the speed and direction from course, we can use a simple formula where we use speed * (time interval) with account of direction and roughly estimate the next coordinates of the next time stamp. We can modify our transition matrix on the Kalman filter to better predict how things are changing.